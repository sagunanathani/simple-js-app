let pokemonRepository = (function () {
  let e = [];
  function t(t) {
    "object" == typeof t && "name" in t
      ? e.push(t)
      : console.log("pokemon is not correct");
  }
  function n() {
    return e;
  }
  function o(e) {
    return (
      showLoadingMessage(),
      fetch(e.detailsUrl)
        .then(function (e) {
          return e.json();
        })
        .then(function (t) {
          hideLoadingMessage(),
            (e.imageUrl = t.sprites.front_default),
            (e.imageBackUrl = t.sprites.back_default),
            (e.height = t.height),
            (e.weight = t.weight),
            (e.types = t.types);
        })
        .catch(function (e) {
          hideLoadingMessage(), console.error(e);
        })
    );
  }
  let i = null;
  function a(e) {
    o(e).then(function () {
      (i = e),
        $("#pokemonModalLabel").text(e.name),
        $("#pokemon-img").attr("src", e.imageUrl),
        $("#pokemon-img").attr("alt", e.name + " image");
      let t = e.types.map((e) => e.type.name).join(", "),
        n = `
        <div class="d-flex justify-content-center gap-3 mb-3">
            <img src="${e.imageUrl}" alt="${e.name} front image" class="pokemon-sprite" />
            <img src="${e.imageBackUrl}" alt="${e.name} back image" class="pokemon-sprite" />
        </div>
        <div>
            Height: ${e.height}<br>
            Weight: ${e.weight}<br>
            Types: ${t}
        </div>
        `;
      $("#pokemon-height").html(n), $("#pokemonModal").modal("show");
    });
  }
  return (
    document
      .getElementById("save-button")
      .addEventListener("click", function () {
        i &&
          (alert(`${i.name} has been saved to your favorites!`),
          $("#pokemonModal").modal("hide"));
      }),
    {
      add: t,
      getAll: n,
      addListItem: function e(t) {
        let n = document.querySelector(".pokemon-list"),
          o = document.createElement("li");
        o.classList.add("list-group-item");
        let i = document.createElement("button");
        (i.innerText = t.name),
          i.classList.add("btn", "btn-primary", "btn-block"),
          o.appendChild(i),
          n.appendChild(o),
          i.addEventListener("click", function () {
            a(t);
          });
      },
      loadList: function e() {
        return (
          showLoadingMessage(),
          fetch("https://pokeapi.co/api/v2/pokemon/?limit=150")
            .then(function (e) {
              return e.json();
            })
            .then(function (e) {
              hideLoadingMessage(),
                e.results.forEach(function (e) {
                  t({ name: e.name, detailsUrl: e.url });
                });
            })
            .catch(function (e) {
              hideLoadingMessage(), console.error(e);
            })
        );
      },
      loadDetails: o,
      showDetails: a,
    }
  );
})();
function showLoadingMessage() {
  document.getElementById("loading-message").style.display = "block";
}
function hideLoadingMessage() {
  document.getElementById("loading-message").style.display = "none";
}
console.log("pokemonList:", pokemonRepository.getAll()),
  pokemonRepository.loadList().then(function () {
    let e = document.getElementById("pokemonModal"),
      t = document.getElementById("backgroundContent"),
      n = document.querySelector("h1");
    $(e).on("show.bs.modal", () => {
      t.setAttribute("inert", "");
    }),
      $(e).on("hidden.bs.modal", () => {
        t.removeAttribute("inert"), n.focus();
      }),
      pokemonRepository.getAll().forEach(function (e) {
        pokemonRepository.addListItem(e);
      });
  });
